[GROUND]
# This file is used configure DroneBridge on the groundstation side
# ---------------------------------------------------------------

# [m|w] for monitor mode (long range) or wifi mode (short range - not supported yet)
mode=m

# [1|2|5] 1: MSP v1, 2: MSP v2, 5: DroneBridge RC protocol (recommended) 
rc_proto=5

# choose a random number. Allowed numbers: 0-255
# has to be the same on drone and groundstation! Acts as a identifier for both and the link.
communication_id=200

# [auto|manual] Use "auto" if only one wifi stick is connected! We will choose that one.
interface_selection=auto

# If interface_selection=manual
# Interfaces which DroneBridge modules use to communicate with groundstation (manual mode)
# Type in the MAC address of the desired wifi card without the ":"
interface_control=24050f73b574
interface_tel=24050f73b574
interface_video=24050f73b574
interface_comm=24050f73b574
interface_proxy=24050f73b574

# enable "Y" or disable "N" DroneBridge modules
en_control=Y
en_tel=Y
en_video=N
en_comm=Y

# Open port on smartphone (app listens on this one - telemetry module)
# If you want to use MAVLink with QGroundControl you can change it to 14550 OR set QGroundControl to port 1604
port_smartphone_ltm=1604
# Open port on smartphone (app listens on this one - communication module) (unused!)
port_smartphone_comm=1603
# Smartphone will send its communication messages to this port (on groundstation)
comm_port_local=1605
# UDP port to which the proxy module sends the data received over long range link.
# This port is also the local port used by proxy module to receive packets
proxy_port_local_remote=1607

# Number of Joystick interface for RC
joy_interface=0

# Configure your RC to use max. endpoints on every channel. Otherwise you sacrifice stick resolution.
# Calibrate (on) your RC first! This calibration works on groundstation side to fix little inperfections.
# execute "jscal -c /dev/input/js0" to calibrate/generate calibration data or use jscal-gtk under linux
# a command that gets executed when joystick is connected on init.
# Get calibration data via "jscal -p /dev/input/js0" and save it to /var/lib/joystick/joystick.state via "sudo jscal-store /dev/input/js0"
# Note: "joy_interface"-number has to be at the end of calibration command "joy_cal". Only that way calibration is applied to slected joystick interface
# Pretty much every shell command works. So you could e.g. also remap the axis. Just check out http://manpages.ubuntu.com/manpages/precise/man1/jscal.1.html
# jscal notation is: <number_of_axes>,<1=calibrate_axis>,<precision/gitter><coeff-center-min><coeff-center-max> --> see: https://blog.gimx.fr/joystick-calibration-in-gnulinux/
joy_cal=jscal -s 6,1,0,127,127,4260750,4260750,1,0,127,127,4260750,4260750,1,0,127,127,4260750,4260750,1,0,127,127,4260750,4260750,1,0,127,127,4260750,4260750,1,0,120,120,4511382,4036500 /dev/input/js0
